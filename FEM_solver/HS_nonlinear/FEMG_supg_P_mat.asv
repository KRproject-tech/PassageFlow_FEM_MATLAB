function [femg_supg_Px_mat,femg_supg_Py_mat] = HS_FEMG_supg_P_mat(tau_s,b_U)
%% SUPG慣性項計算(グローバル変数)
global all_row_ind2 all_col_ind2 NEW_NODE_NUM_max NODE_NUM_max ELEM_NUM_max Elem_num;

%%スパース行列の非スパース化
b_U = full(b_U);

%% 配列要素にアクセスする方法
% femg_supg_Px_mat = sparse(NEW_NODE_NUM_max,NODE_NUM_max);
% femg_supg_Py_mat = sparse(NEW_NODE_NUM_max,NODE_NUM_max);
% %Global matrix
% for i=1:1:ELEM_NUM_max;
%     
%     %%速度成分の分解
%     bu = b_U(Elem_num(i,1:6),1);
%     bv = b_U(NEW_NODE_NUM_max + Elem_num(i,1:6),1);
% 
%     %%SUPG慣性項
%     [fem_supg_px_mat,fem_supg_py_mat] = FEM_supg_P_mat(bu,bv,i);    
%     femg_supg_Px_mat(Elem_num(i,1:6),Elem_num(i,1:3)) = femg_supg_Px_mat(Elem_num(i,1:6),Elem_num(i,1:3)) + fem_supg_px_mat;
%     femg_supg_Py_mat(Elem_num(i,1:6),Elem_num(i,1:3)) = femg_supg_Py_mat(Elem_num(i,1:6),Elem_num(i,1:3)) + fem_supg_py_mat;
% end

%% 一括で組み立てる方法

% ELEM_NUM_max is the number of local stiffness matrices
all_stiff1 = zeros(ELEM_NUM_max,18);
all_stiff2 = zeros(ELEM_NUM_max,18);


    
    %%移流速度成分の分解
    bu = b_U(Elem_num(i,1:6),1);
    bv = b_U(NEW_NODE_NUM_max + Elem_num(i,1:6),1);
  
    
%%SUPG慣性項
tau_S = zeros(1,1,ELEM_NUM_max);
tau_S(1,1,:) = tau_s;  
[fem_supg_px_mat,fem_supg_py_mat] = HS_FEM_supg_P_mat(bu,bv,i);     

for i=1:ELEM_NUM_max
	% insert your 1x36 array of stiffness elements
	all_stiff1(i,:) = reshape(tau_s(i)*fem_supg_px_mat',1,18);
    all_stiff2(i,:) = reshape(tau_s(i)*fem_supg_py_mat',1,18);
end

all_stiff1 = reshape(all_stiff1',1,18*ELEM_NUM_max);
all_stiff2 = reshape(all_stiff2',1,18*ELEM_NUM_max);

% here NEW_NODE_NUM_max is the total number of unknowns
femg_supg_Px_mat = sparse(all_row_ind2,all_col_ind2,all_stiff1,NEW_NODE_NUM_max,NODE_NUM_max);
femg_supg_Py_mat = sparse(all_row_ind2,all_col_ind2,all_stiff2,NEW_NODE_NUM_max,NODE_NUM_max);

